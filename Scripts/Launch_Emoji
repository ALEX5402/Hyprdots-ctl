#!/bin/env bash

pkill -x rofi && exit
export PATH=$PATH:/usr/lib/hyprdots-ctl/
. GLOBAL

rofi_pos

CHECK wtype noto-fonts-emoji
trap 'killall wtype' EXIT

emojiData="${etcDir}/emoji.db"
recentData="${cacheCtl}/show_emoji_recent.db"

#? handle pasting 
pasteIt() {
    is_xwayland=false
    is_term=false
     is_xwayland="$(hyprctl -j activewindow | jq -r '.xwayland' )"
    class=$(hyprctl -j activewindow | jq -r '.initialClass') 
    list_term=$(sed -n '/^### startCLASS ###$/,/^### endCLASS ###$/{//!p}' "${0}")
        if echo "${list_term}" | grep -q "${class}" ; then
        is_term=true
        fi
        # if [[ "${TERM}" = "linux" ]]; then
                if ${is_term} ;then 
                    # notify-send "Terminal"
                    : #? Terminal should be manually pasted
                    wtype "${selEmoji}"
                else
                    if ! ${is_xwayland}; then      
                    # notify-send "Wayland"
                    wtype -M ctrl v -m ctrl #? Better on Wayland
                    else      
                    # notify-send "Xwayland"
                    wtype "${selEmoji}" #? Better on xwayland ;
                    fi
                fi
        # else 
            # wl-paste
        # fi
}

save_recent() {
#? Prepend the selected emoji to the top of the recentData file
    # sed -i "1i\\$selEmoji" "${recentData}"
awk -v var="$dataEmoji" 'BEGIN{print var} {print}' "${recentData}" > temp && mv temp "${recentData}"
#?  Use awk to remove duplicates and empty lines, moving the most recent emoji to the top
    awk 'NF' "${recentData}" | awk '!seen[$0]++' > temp && mv temp "${recentData}"
}

if [[ ! -f "${recentData}" ]]; then
   echo "    Arch linux I use Arch BTW" > "${recentData}"
fi
#? Read the contents of recent.db and main.db separately
recent_entries=$(cat "${recentData}")
main_entries=$(cat "${emojiData}")
#? Combine the recent entries with the main entries
combined_entries="${recent_entries}\n${main_entries}"
#? Remove duplicates from the combined entries
unique_entries=$(echo -e "${combined_entries}" | awk '!seen[$0]++')

dataEmoji=$(echo "${unique_entries}" | rofi -dmenu -multi-select -i -theme-str  "entry { placeholder: \"Select Emoji...\";} ${pos} ${r_override}" -theme-str "${fnt_override}" -config "${roFile}")
# selEmoji=$(echo -n "${selEmoji}" | cut -d' ' -f1 | tr -d '\n' | wl-copy)
trap save_recent EXIT
selEmoji=$(printf "%s" "${dataEmoji}" | cut -d' ' -f1 | tr -d '\n\r' )
wl-copy "${selEmoji}"
pasteIt


exit

### startCLASS ###
kitty
org.kde.konsole
terminator
XTerm
Alacritty
### endCLASS ###
