#!/bin/env bash

export PATH=$PATH:/usr/lib/hyprdots-ctl/
. GLOBAL

check "nwg-displays"

pid=$$
monitorsConf="$ConfDir/hypr/monitors.conf"
nwgConf="$ConfDir/hypr/hyprdots-ctl/nwg-displays.conf"
touch "$nwgConf"
WSConf="$ConfDir/hypr/workspaces.conf"
touch "$WSConf"

move_lines_to_bottom() {
    local lines=("$@")
    local file="${lines[-1]}"
    unset 'lines[${#lines[@]}-1]'

    for line in "${lines[@]}"; do
        # Remove the line if it exists
        sed -i "\|$line|d" "$file"
    done

    # Append a newline to the file if it does not end with one
    [[ $(tail -c1 "$file" | wc -l) -eq 0 ]] && echo "" >> "$file"

    # Append the lines to the end of the file
    for line in "${lines[@]}"; do
        echo "$line" >> "$file"
    done
}

sM="source = $nwgConf #! Hyprdots-ctl: Current monitor setting is here"
wS="source = $WSConf #! Hyprdots-ctl: Saves workspace assignment per monitor"
trap 'move_lines_to_bottom "$sM" "$wS" "$monitorsConf"' EXIT



if ! grep -F "float" ~/.config/hypr/windowrules.conf | grep -F "nwg-displays" > /dev/null; then
    # If the line does not exist in the file, append it
    wR='windowrulev2=float,class:^(nwg-displays)$ #! Hyprdots-ctl: Auto Generated windowrules'
    echo "$wR" >> ~/.config/hypr/windowrules.conf
fi

# Create a file with the PID in the filename
touch /tmp/hyprdots-monitors-$pid
# If any /tmp/hyprdots-monitors* files exist, kill the processes with those PIDs
for file in /tmp/hyprdots-monitors*; do
  # Extract the PID from the filename
  pid_to_kill=$(basename $file | cut -d '-' -f 3)
  
  # If this is not the current process and the process exists, kill it and its subprocesses
  if [ "$pid_to_kill" != "$pid" ] && kill -0 $pid_to_kill 2>/dev/null; then
    pkill -9 -P $pid_to_kill
    kill -9 $pid_to_kill
    exit 0
  fi
done

currMon=$(hyprctl monitors all -j | jq -r '.[] | .description ' | sed 's/ (.*//')





nwg-displays -n 20 -m "$nwgConf"

