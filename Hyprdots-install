#!/bin/bash
is_link=false
    while (( "$#" )); do
        case "$1" in
            --clone)
                CloneDir="$2"
                shift  2
                ;;
            --link)
                 CloneDir=${2}
                 is_link=true
                shift  2
                ;;
            --git)
                GIT="$2"
                shift  2
                ;;
            *)
cat << HANDLE_ERROR 
Unknown option: $1
Please run: 'Hyprdots-install'                                Install Hyprdots (Default)

Advanced usage:
        --clone /path/to/Clone/Hyprdots                      Clone Hyprdots in a Custom path then run installation.
                                                              Default: '${HOME}/Hyprdots'

        --git https://gitclone/repo/link/                          Repository link to be cloned
                                                              Default: 'https://github.com/prasanthrangan/hyprdots'
HANDLE_ERROR
                exit  1
                ;;
        esac
    done
[[ -n ${CloneDir} ]] && echo "Set Clone Directory: ${CloneDir}"
[[ ${is_link} == true ]] && echo "Linked to Clone Directory: ${CloneDir}"
[[ -n ${GIT} ]] &&    echo "Cloning from: ${GIT}"

    # Set default values if not provided
    CloneDir=${CloneDir:-${HOME}/Hyprdots}
    GIT=${GIT:-"https://github.com/prasanthrangan/hyprdots"}


#? One Time Set up on Terminal. 
install_distro() {

  # echo -e "$(tput setaf 5)\nHyprdots-ctl Cannot find the Hyprdots Directory, Will proceed to default installation!$(tput sgr0)"
  # read -n 1 -s -r -p "[ENTER:yes ANY:no] Proceed? " key ; [[ -z "$key" ]] || exit 0 
  distro_ID=$(cat /etc/*release | grep -oP '^ID=\K[^"]+' | tr -d ' ' | tr '[:upper:]' '[:lower:]')

case "${distro_ID}" in
  "fedora")
    echo "This is Fedora"
     Install_Hyprdots-DNF "${CloneDir}" "${GIT}"
    ;;
  "arch")
     Install_Hyprdots-PACMAN "${CloneDir}" "${GIT}"
    ;;
  *)
    echo "This is neither Fedora nor Arch"
    # Add the commands for other distributions here
    ;;
esac
}


export PATH=${PATH}:/usr/lib/hyprdots-ctl/

if [[ -d "${CloneDir}" ]] && cd "${CloneDir}"; then 
  cd "${CloneDir}"/Scripts || exit 0

# Change Branch
git fetch --depth=1
 git_branch=$(git branch -a | fzf --prompt='Choose a branch')
 if [[ $git_branch == *"*"* ]]; then
     echo "Already in branch: ${git_branch}"
 else
# Extract the branch name without the remote prefix and trim leading whitespace
branch_name=$(echo "${git_branch}" | sed 's/.*\///' | sed 's/^[[:space:]]*//')
# Switch to the selected branch
git checkout "${branch_name}"
echo "On branch: ${branch_name}"
 fi

  echo "Clone Directory exist: ${CloneDir}"
  echo "[*]Using existing directory."
  echo "[*]Uncommited changes will be stashed"

  read -n 1 -s -r -p "[ENTER:yes ANY:no] Proceed?" key ; [[ -z "${key}" ]] || exit 0 
  ( git reset --hard HEAD  && git clean -fd  && git pull )  || true
      if [[ ${is_link} == true ]]; then
          echo -e "Hyprdots-ctl will make ${CloneDir} your Clone Directory By restoring the links."
          ./restore_lnk.sh
      else
        echo -e "Hyprdots-ctl will make ${CloneDir} your Clone Directory."
      ./install.sh /tmp/hyprdots-ctl-$(id -u)-temporary-apps
      fi
else 
install_distro
fi
