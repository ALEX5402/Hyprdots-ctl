#!/bin/bash

libDir=/usr/lib/hyde-cli
export PATH="$libDir:$PATH"

export is_fresh_install=true

. GLOBAL_hyde

#? One Time Set up on Terminal.
install_distro() {
    if [ "${1}" = "--fresh" ]; then export fresh=true; fi
    . /etc/os-release

    case "${ID}" in
        "fedora")
            Install_Hyde-DNF "${newCloneDir}" "${GIT}"
        ;;
        "arch")
            Install_Hyde-PACMAN "${newCloneDir}" "${GIT}"
        ;;
        *)
            # print_prompt -r "Can't recognize your disto: '${ID}'  "
            Install_Hyde-PACMAN "${newCloneDir}" "${GIT}"
            # Add the commands for other distributions here
            echo ""

        ;;
    esac
}

# Variables
export install_packages_list="/tmp/hyde-cli-$(id -u)-temporary-apps"
export barLine="$(printf '=%.0s' $(seq 1 "$(tput cols)"))"
export cacheCtl="${HOME}/.cache/hyde"
export meta_file="${cacheCtl}/hyde.meta"

is_link=false
while (("$#")); do
    case "$1" in
        -d | --dir)
            newCloneDir="$2"
            shift 2
        ;;
        -l | --link)
            is_link=true
            shift 1
        ;;
        -g | --git)
            GIT="$2"
            shift 2
        ;;
        *)
    cat <<HANDLE_ERROR
Unknown option: $1
Please run: 'Hyde-install'                                Install Hyde (Defaults)

Advanced usage: [Hyde-install] --[options]
        -d|--dir /path/to/Clone/Hyde                       Clone Hyde in a Custom path then run installation.
                                                                    Default: '${HOME}/.cache/hyde/Hyde'
        -g|--git https://gitclone/repo/link/                     Remote Repository link to be cloned
                                                                    Default: 'https://github.com/prasanthrangan/hyprdots'
        -l|--link                                                Flag to transfer the link to a Clone Directory
                                                                    Default: 'false'
HANDLE_ERROR
            exit 1
        ;;
    esac
done

[[ -n ${newCloneDir} ]] && print_prompt -y "Custom Clone Directory: ${newCloneDir}"
[[ ${is_link} == true ]] && print_prompt - "Linked to Custom Clone Directory: ${newCloneDir}"
[[ -n ${GIT} ]] && print_prompt -"Custom repository from: ${GIT}"

# Set default values if not provided
newCloneDir=${newCloneDir:-${HOME}/.cache/hyde/Hyde-Clone}
#TODO Change this to the upstream
# GIT=${GIT:-"https://github.com/prasanthrangan/hyde"}
GIT=${GIT:-"https://github.com/prasanthrangan/hyprdots"}

export newCloneDir
export GIT

export CloneDir=${newCloneDir}
if cd "${newCloneDir}"/Scripts; then
    print_prompt -m "[*] " -y "Using existing directory."
    if [[ ${is_link} == true ]]; then
        echo -e "Hyde-cli will make ${newCloneDir} your Clone Directory By restoring the links."
        set_branch
        integrity_check 
        print_prompt -y "Successfully Migrated the Clone Directory: ${newCloneDir}"
    else
        install_distro 
    fi
else
    install_distro --fresh
fi
[ $? -ne 0 ] && exit 1
set_metadata "${CloneDir}"
Hyde reload
if pkg_installed -v sddm &> /dev/null ; then
 systemctl restart sddm
fi
