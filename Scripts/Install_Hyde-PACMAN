#!/bin/env bash

#TODO: Clean This

CloneDir=${1}
GIT=${2}

barLine="$(printf '=%.0s' $(seq 1 "$(tput cols)"))"
clear
cat << GREET
WOW an Arch BTW User!
${barLine}

$(tput setaf 2)Hello ${USER}! This is an automated installation for Hyde.$(tput sgr0)

Hyde-cli is an active helper for Hyde. During this installation, the script will:
1. Check if Hyde is already installed.
2. If not, it will clone the Hyde repository from GitHub. https://github.com/prasanthrangan/hyde
3. Optionally, you can add Chaotic AUR to your mirror list for faster package installation.
4. Finally, it will clone the Hyde repository and run the installation script.

From here on 'Dots' 'Dot Files' means Configurations.

$(tput setaf 3)Hyde-cli is a CLI for Hyde.This aims to add patches 
for Hyde and address common Dots issues.
Also this is a USER specific helper, includes a control file for a user to preserve the USER preferences.
Please note that using these scripts may alter your Dot files.$(tput sgr0)

$(tput setaf 6)And wait, there's more!!! Checkout 'Hyde man' to see how you can manage your Hyde setup.$(tput sgr0)

HAVE A GOOD DAY!

Visit: https://github.com/kRHYME7/Hyde-cli for more information.
${barLine}

Clone Directory: ${CloneDir}
Git Repository: ${GIT}

GREET


read -n 1 -s -r -p "[ENTER:yes ANY:no] Proceed?" key ; echo ; [[ -z "$key" ]] || exit 0 

#? Attempt to install using Chaotic AUR
 sudo /usr/lib/hyde-cli/Install_ChaoticAUR --install fresh 

# rm -fr "${CloneDir}" || true
git clone --depth 1 "${GIT}" "${CloneDir}"
cd "${CloneDir}"/Scripts || exit 0

#? Select Branch
Git_Repo=${GIT}
    if echo "$Git_Repo" | grep -q "/tree/"; then
        branch=${Git_Repo#*tree/} Git_Repo=${Git_Repo%/tree/*}
    else branches=$(curl -s "https://api.github.com/repos/${Git_Repo#*://*/}/branches" | jq -r '.[].name') ; branches=($branches)
        if [[ ${#branches[@]} -le 1 ]]; then
            branch=${branches[0]}
        else echo "Select a Branch"
            select branch in "${branches[@]}"; do [[ -n $branch ]] && break || echo "Invalid selection. Please try again." ; done
        fi
    fi

echo "Clone Directory exist: ${CloneDir}"
echo "Git URL: $(git remote get-url origin)"
echo "Git Branch: ${branch}"

# Change Branch
git fetch --depth=1
 git_branch=$(git branch -a | fzf --prompt='Choose a branch')
 if [[ $git_branch == *"*"* ]]; then
     echo "Already in branch: ${git_branch}"
 else
# Extract the branch name without the remote prefix and trim leading whitespace
branch_name=$(echo "${git_branch}" | sed 's/.*\///' | sed 's/^[[:space:]]*//')
# Switch to the selected branch
git checkout "${branch_name}"
echo "On branch: ${branch_name}"
 fi


custom_apps="${CloneDir}/Scripts/custom_apps.lst"

if [[ -e ${custom_apps} ]] ; then 
sed 's/^#//' "${custom_apps}" | fzf --multi --prompt='Optional packages: press [ TAB ] to select. [ ESC ] exit. [ RETURN ] confirm' > /tmp/hyde-cli-$(id -u)-temporary-apps
echo -e "Optional packages loaded:"
cat /tmp/hyde-cli-$(id -u)-temporary-apps
fi
 

 ./install.sh /tmp/hyde-cli-$(id -u)-temporary-apps
