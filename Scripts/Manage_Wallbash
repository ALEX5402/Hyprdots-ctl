#!/bin/bash

. /usr/lib/hyprdots-ctl/GLOBAL

STATE=${cacheCtl}/wallbash-state
DWAL=${cacheCtl}/wallbash-sequences
DCOL="${ConfDir}/hypr/wallbash/sequence.dcol"
grep -iq "EnableWallDcol=1" "${ConfDir}"/hypr/scripts/globalcontrol.sh && toggle_wallbash=true
FLAG=${2}
echo ${FLAG}

[[ ! -e ${DCOL} ]] &&  do_contain "${etcDir}/sequence.dcol" "${ConfDir}/hypr/wallbash/sequence.dcol"
[[ ! -e ${DWAL} ]] && Hyprdots reload

ChangeValue() {  
  local var_name=${1}
  local var_value=${2}
  sed -i "/^${var_name}=/ s/=.*/=${var_value}/" "${STATE}"
  grep -q "^${var_name}=" "${STATE}" || echo "${var_name}=\"${var_value}\"" >> "${STATE}"
}

handle_toggle() {
dcol_file=${1}
dcol_mask=${2}

if [[ "${FLAG}" == "0" || "${FLAG}" == "--off" ]]; then
toggle_wallbash && echo "Wallbash Enabled!, Disabling first..." && trap toggle_wallbash EXIT  
  [[ ! -e ${dcol_file} ]] &&  print_prompt -r "Already turned off" && exit 1 
    print_prompt -y "Masking ${dcol_file}" 
    mv "${dcol_file}" "${dcol_mask}"  
elif [[ ${FLAG} =~ ^[0-9]+$ ]] ; then
toggle_wallbash && echo "Wallbash Enabled!, Disabling first..." && trap toggle_wallbash EXIT  
[[ -e ${dcol_file} ]] &&  print_prompt -r "Already turned on" && exit 1
print_prompt -y "Unmasking ${dcol_file}"
mv "${dcol_mask}" "${dcol_file}"
fi
exit 0
}

toggle_wallbash() {
[[ ${toggle_wallbash} = true ]] && Hyprdots wallbash toggle
}

function kitty() {
dcol_file=${ConfDir}/hypr/wallbash/kitty.dcol
dcol_mask=${ConfDir}/hypr/wallbash/.kitty.dcol

[[ -n ${FLAG} ]] && handle_toggle "${dcol_file}" "${dcol_mask}"

cat << KITTY
Presets: 1
================================================================
[ 0 | --off ]           Disables wallbash for kitty
[ n ]                   Set a preset [n]umber as terminal colors (1 preset available)
 
KITTY
exit 0
}


function waybar() {
dcol_file=${ConfDir}/hypr/wallbash/waybar.dcol
dcol_mask=${ConfDir}/hypr/wallbash/.waybar.dcol

[[ -n ${FLAG} ]] && handle_toggle "${dcol_file}" "${dcol_mask}"

cat << WAYBAR
Presets: 1
================================================================
[ 0 | --off ]           Disables wallbash for waybar
[ n ]                   Set a preset [n]umber as terminal colors (1 preset available)
 
WAYBAR
exit 0
}

function term() {
start=1 max=3 
if [[ "${FLAG}" == "-t" || "${FLAG}" == "--toggle" ]]; then
 ((term_last_state++))
if (( term_last_state > max )); then term_last_state=${start} ; fi
pre_set="${term_last_state}"
elif [[ ${FLAG} =~ ^[0-9]+$ ]] ; then
pre_set=${1}
elif [[ "${FLAG}" == "--restore" || "${FLAG}" == "-R" ]] ; then
:
else 
cat << TERM
Presets: ${max}
================================================================
[ -R | --restore]       Restore last colors.
[ -t | --toggle ]       Toggles the preset.
[ n ]                   Set a preset [n]umber as terminal colors  
TERM
exit 0
fi

[[ -z ${pre_set}  ]] && pre_set=${term_last_state} 

sequence="$(grep "^${pre_set}" "${DWAL}" | cut -d'|' -f2)"
# Send the sequence to all active terminals
for term in /dev/pts/[0-9]*; do  echo -en "${sequence}" > "${term}" &  done
echo -en "${sequence}" > /tmp/sequence

ChangeValue "term_last_state" "${pre_set}"
}


[[ ! -e ${STATE} ]] && touch "${STATE}"
. "${STATE}"

if [[ "${FLAG}" == "reload" ]]; then
 echo "Reloading" 
 # Add Soon
else
"${@}"
fi
